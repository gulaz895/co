-- Mock object u กับ methods จำลอง
local u = {}
function u:at(i) return i*2 end
function u:A(val) return val*10 end
function u:Yt(t,i,f) return t[i] end
function u:tt(k,K,f) print("tt called") end
function u:et(K,o,t,d) print("et called") end
function u:st(N,t,d,K) print("st called") end
function u:lt(d,N,K,t) print("lt called") end

-- Table ตัวอย่าง
local t = {
    [1] = {
        [3] = true,
        [6] = {1,2,3},
        [25] = {10,20,30},
    }
}

-- ตัวแปรต่าง ๆ
local S = 0
local _ = 0
local k,i,o,K,v,d,N,f,Z,j = 1,1,100,50,5,7,0,{},{},0
local R = {}

-- ฟังก์ชันหลัก
local function process(u,t,S,_,k,i,o,K,v,d,N,f,Z,j)
    local b = u:at(i)
    
    if b == 0x4569 then
        return
    elseif b ~= 0x91b2 then
        -- continue logic
    end

    if S == 0 then
        if t[1][3] then
            local J = t[1][25]
            local lenJ = #J
            local state = 0x66

            while true do
                if state == 0x66 then
                    if i == 0x49 then
                        b = u:at(i)
                        if b ~= nil then
                            return Z, {u:A(b)}, j
                        end
                    end
                    state = 0xd

                elseif state == 0xd then
                    state = 0x8
                    J[lenJ + 1] = o

                elseif state == 0x8 then
                    state = 0x47
                    J[lenJ + 2] = K

                elseif state == 0x47 then
                    J[lenJ + 3] = 999 -- placeholder
                    break
                end
            end
        end

    elseif S == 7 then
        u:tt(k,K,f)
    elseif S == 1 then
        f[K] = K+k
    elseif S == 4 then
        f[K] = K-k
    elseif S == 2 then
        local I = #t[1][6]
        t[1][6][I+1] = v
        t[1][6][I+2] = K
        t[1][6][I+3] = k
    end

    if _ == 0 then
        if t[1][3] then
            u:et(K,o,t,d)
        else
            u:st(N,t,d,K)
        end
    elseif _ == 7 then
        R[K] = d
    elseif _ == 1 then
        R[K] = K+d
    elseif _ == 4 then
        R[K] = K-d
    elseif _ == 2 then
        u:lt(d,N,K,t)
    end

    return Z, nil, j
end

-- เรียกใช้งาน
local resultZ, resultTable, resultJ = process(u,t,S,_,k,i,o,K,v,d,N,f,Z,j)
print(resultZ, resultTable, resultJ)
print("t[1][25] after process:", table.unpack(t[1][25]))
